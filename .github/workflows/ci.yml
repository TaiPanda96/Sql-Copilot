name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  CI:
    timeout-minutes: 15
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      TZ: America/New_York # Set the timezone to America/New York
      NEON_HOST: ${{ secrets.NEON_HOST }}
      NEON_DB: ${{ secrets.NEON_DB }}
      NEON_USER: ${{ secrets.NEON_USER }}
      NEON_PASSWORD: ${{ secrets.NEON_PASSWORD }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: NPM Install
        run: npm ci

      - name: Prisma Generate
        working-directory: sql-copilot/
        run: npx prisma generate

      - name: Type Check
        working-directory: sql-copilot/
        run: npm run typecheck

      - name: Prettier
        run: npx prettier --check .

      - name: ESLint
        working-directory: sql-copilot/
        run: npx eslint . --output-file ../../eslint_report.json --format json
        continue-on-error: true

      - uses: actions/upload-artifact@v4
        with:
          name: eslint_report.json
          path: eslint_report.json
          retention-days: 5

      - name: Check Uncommitted Changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Uncommitted changes detected."
            git status --porcelain
            exit 1
          else
            echo "No uncommitted changes detected."
          fi
        # Connect to Neon PostgreSQL and run migrations
      - name: Run Migrations on Neon PostgreSQL
        run: |
          export DATABASE_URL=postgresql://${{ secrets.NEON_USER }}:${{ secrets.NEON_PASSWORD }}@${{ secrets.NEON_HOST }}/${{ secrets.NEON_DB }}?sslmode=require
          npx prisma migrate deploy --schema sql-copilot/prisma/schema.prisma
        working-directory: sql-copilot/
