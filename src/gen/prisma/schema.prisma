model Files {
  id   String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  url  String  @map("url")
  name String? @map("name")

  // User Relationship
  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id") @db.Uuid

  @@map("files")
}

model Messages {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  message    String    @map("message")
  userId     String?   @map("user_id") @db.Uuid
  attachment String?   @map("attachment")
  at         DateTime? @map("at")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  thread   Threads? @relation(fields: [threadId], references: [id])
  threadId String?  @map("thread_id") @db.Uuid

  @@map("messages")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../../src/gen/prisma"
  previewFeatures = ["metrics", "prismaSchemaFolder", "views", "driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Threads {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String     @map("title")
  userId    String?    @map("user_id") @db.Uuid
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @map("updated_at")
  messages  Messages[]

  @@map("threads")
}

model User {
  id    String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email String  @unique
  name  String?
  files Files[]
}
